{"ast":null,"code":"import _toConsumableArray from \"E:/Web_development/Projects/youtube_clone/node_modules/@babel/runtime/helpers/esm/toConsumableArray.js\";\nimport _defineProperty from \"E:/Web_development/Projects/youtube_clone/node_modules/@babel/runtime/helpers/esm/defineProperty.js\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nvar _excluded = [\"className\", \"columns\", \"columnSpacing\", \"component\", \"container\", \"direction\", \"item\", \"rowSpacing\", \"spacing\", \"wrap\", \"zeroMinWidth\"]; // A grid component using the following libs as inspiration.\n//\n// For the implementation:\n// - https://getbootstrap.com/docs/4.3/layout/grid/\n// - https://github.com/kristoferjoseph/flexboxgrid/blob/master/src/css/flexboxgrid.css\n// - https://github.com/roylee0704/react-flexbox-grid\n// - https://material.angularjs.org/latest/layout/introduction\n//\n// Follow this flexbox Guide to better understand the underlying model:\n// - https://css-tricks.com/snippets/css/a-guide-to-flexbox/\n\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { unstable_extendSxProp as extendSxProp, handleBreakpoints, unstable_resolveBreakpointValues as resolveBreakpointValues } from '@mui/system';\nimport { unstable_composeClasses as composeClasses } from '@mui/base';\nimport requirePropFactory from '../utils/requirePropFactory';\nimport styled from '../styles/styled';\nimport useThemeProps from '../styles/useThemeProps';\nimport useTheme from '../styles/useTheme';\nimport GridContext from './GridContext';\nimport gridClasses, { getGridUtilityClass } from './gridClasses';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\n\nfunction getOffset(val) {\n  var parse = parseFloat(val);\n  return \"\".concat(parse).concat(String(val).replace(String(parse), '') || 'px');\n}\n\nexport function generateGrid(_ref) {\n  var theme = _ref.theme,\n      ownerState = _ref.ownerState;\n  var size;\n  return theme.breakpoints.keys.reduce(function (globalStyles, breakpoint) {\n    // Use side effect over immutability for better performance.\n    var styles = {};\n\n    if (ownerState[breakpoint]) {\n      size = ownerState[breakpoint];\n    }\n\n    if (!size) {\n      return globalStyles;\n    }\n\n    if (size === true) {\n      // For the auto layouting\n      styles = {\n        flexBasis: 0,\n        flexGrow: 1,\n        maxWidth: '100%'\n      };\n    } else if (size === 'auto') {\n      styles = {\n        flexBasis: 'auto',\n        flexGrow: 0,\n        flexShrink: 0,\n        maxWidth: 'none',\n        width: 'auto'\n      };\n    } else {\n      var columnsBreakpointValues = resolveBreakpointValues({\n        values: ownerState.columns,\n        breakpoints: theme.breakpoints.values\n      });\n      var columnValue = typeof columnsBreakpointValues === 'object' ? columnsBreakpointValues[breakpoint] : columnsBreakpointValues;\n\n      if (columnValue === undefined || columnValue === null) {\n        return globalStyles;\n      } // Keep 7 significant numbers.\n\n\n      var width = \"\".concat(Math.round(size / columnValue * 10e7) / 10e5, \"%\");\n      var more = {};\n\n      if (ownerState.container && ownerState.item && ownerState.columnSpacing !== 0) {\n        var themeSpacing = theme.spacing(ownerState.columnSpacing);\n\n        if (themeSpacing !== '0px') {\n          var fullWidth = \"calc(\".concat(width, \" + \").concat(getOffset(themeSpacing), \")\");\n          more = {\n            flexBasis: fullWidth,\n            maxWidth: fullWidth\n          };\n        }\n      } // Close to the bootstrap implementation:\n      // https://github.com/twbs/bootstrap/blob/8fccaa2439e97ec72a4b7dc42ccc1f649790adb0/scss/mixins/_grid.scss#L41\n\n\n      styles = _extends({\n        flexBasis: width,\n        flexGrow: 0,\n        maxWidth: width\n      }, more);\n    } // No need for a media query for the first size.\n\n\n    if (theme.breakpoints.values[breakpoint] === 0) {\n      Object.assign(globalStyles, styles);\n    } else {\n      globalStyles[theme.breakpoints.up(breakpoint)] = styles;\n    }\n\n    return globalStyles;\n  }, {});\n}\nexport function generateDirection(_ref2) {\n  var theme = _ref2.theme,\n      ownerState = _ref2.ownerState;\n  var directionValues = resolveBreakpointValues({\n    values: ownerState.direction,\n    breakpoints: theme.breakpoints.values\n  });\n  return handleBreakpoints({\n    theme: theme\n  }, directionValues, function (propValue) {\n    var output = {\n      flexDirection: propValue\n    };\n\n    if (propValue.indexOf('column') === 0) {\n      output[\"& > .\".concat(gridClasses.item)] = {\n        maxWidth: 'none'\n      };\n    }\n\n    return output;\n  });\n}\n/**\n * Extracts zero value breakpoint keys before a non-zero value breakpoint key.\n * @example { xs: 0, sm: 0, md: 2, lg: 0, xl: 0 } or [0, 0, 2, 0, 0]\n * @returns [xs, sm]\n */\n\nfunction extractZeroValueBreakpointKeys(_ref3) {\n  var breakpoints = _ref3.breakpoints,\n      values = _ref3.values;\n  var nonZeroKey = '';\n  Object.keys(values).forEach(function (key) {\n    if (nonZeroKey !== '') {\n      return;\n    }\n\n    if (values[key] !== 0) {\n      nonZeroKey = key;\n    }\n  });\n  var sortedBreakpointKeysByValue = Object.keys(breakpoints).sort(function (a, b) {\n    return breakpoints[a] - breakpoints[b];\n  });\n  return sortedBreakpointKeysByValue.slice(0, sortedBreakpointKeysByValue.indexOf(nonZeroKey));\n}\n\nexport function generateRowGap(_ref4) {\n  var theme = _ref4.theme,\n      ownerState = _ref4.ownerState;\n  var container = ownerState.container,\n      rowSpacing = ownerState.rowSpacing;\n  var styles = {};\n\n  if (container && rowSpacing !== 0) {\n    var rowSpacingValues = resolveBreakpointValues({\n      values: rowSpacing,\n      breakpoints: theme.breakpoints.values\n    });\n    var zeroValueBreakpointKeys;\n\n    if (typeof rowSpacingValues === 'object') {\n      zeroValueBreakpointKeys = extractZeroValueBreakpointKeys({\n        breakpoints: theme.breakpoints.values,\n        values: rowSpacingValues\n      });\n    }\n\n    styles = handleBreakpoints({\n      theme: theme\n    }, rowSpacingValues, function (propValue, breakpoint) {\n      var themeSpacing = theme.spacing(propValue);\n\n      if (themeSpacing !== '0px') {\n        return _defineProperty({\n          marginTop: \"-\".concat(getOffset(themeSpacing))\n        }, \"& > .\".concat(gridClasses.item), {\n          paddingTop: getOffset(themeSpacing)\n        });\n      }\n\n      if (zeroValueBreakpointKeys.includes(breakpoint)) {\n        return {};\n      }\n\n      return _defineProperty({\n        marginTop: 0\n      }, \"& > .\".concat(gridClasses.item), {\n        paddingTop: 0\n      });\n    });\n  }\n\n  return styles;\n}\nexport function generateColumnGap(_ref7) {\n  var theme = _ref7.theme,\n      ownerState = _ref7.ownerState;\n  var container = ownerState.container,\n      columnSpacing = ownerState.columnSpacing;\n  var styles = {};\n\n  if (container && columnSpacing !== 0) {\n    var columnSpacingValues = resolveBreakpointValues({\n      values: columnSpacing,\n      breakpoints: theme.breakpoints.values\n    });\n    var zeroValueBreakpointKeys;\n\n    if (typeof columnSpacingValues === 'object') {\n      zeroValueBreakpointKeys = extractZeroValueBreakpointKeys({\n        breakpoints: theme.breakpoints.values,\n        values: columnSpacingValues\n      });\n    }\n\n    styles = handleBreakpoints({\n      theme: theme\n    }, columnSpacingValues, function (propValue, breakpoint) {\n      var themeSpacing = theme.spacing(propValue);\n\n      if (themeSpacing !== '0px') {\n        return _defineProperty({\n          width: \"calc(100% + \".concat(getOffset(themeSpacing), \")\"),\n          marginLeft: \"-\".concat(getOffset(themeSpacing))\n        }, \"& > .\".concat(gridClasses.item), {\n          paddingLeft: getOffset(themeSpacing)\n        });\n      }\n\n      if (zeroValueBreakpointKeys.includes(breakpoint)) {\n        return {};\n      }\n\n      return _defineProperty({\n        width: '100%',\n        marginLeft: 0\n      }, \"& > .\".concat(gridClasses.item), {\n        paddingLeft: 0\n      });\n    });\n  }\n\n  return styles;\n}\nexport function resolveSpacingStyles(spacing, breakpoints) {\n  var styles = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n\n  // undefined/null or `spacing` <= 0\n  if (!spacing || spacing <= 0) {\n    return [];\n  } // in case of string/number `spacing`\n\n\n  if (typeof spacing === 'string' && !Number.isNaN(Number(spacing)) || typeof spacing === 'number') {\n    return [styles[\"spacing-xs-\".concat(String(spacing))]];\n  } // in case of object `spacing`\n\n\n  var spacingStyles = [];\n  breakpoints.forEach(function (breakpoint) {\n    var value = spacing[breakpoint];\n\n    if (Number(value) > 0) {\n      spacingStyles.push(styles[\"spacing-\".concat(breakpoint, \"-\").concat(String(value))]);\n    }\n  });\n  return spacingStyles;\n} // Default CSS values\n// flex: '0 1 auto',\n// flexDirection: 'row',\n// alignItems: 'flex-start',\n// flexWrap: 'nowrap',\n// justifyContent: 'flex-start',\n\nvar GridRoot = styled('div', {\n  name: 'MuiGrid',\n  slot: 'Root',\n  overridesResolver: function overridesResolver(props, styles) {\n    var ownerState = props.ownerState;\n    var container = ownerState.container,\n        direction = ownerState.direction,\n        item = ownerState.item,\n        spacing = ownerState.spacing,\n        wrap = ownerState.wrap,\n        zeroMinWidth = ownerState.zeroMinWidth,\n        breakpoints = ownerState.breakpoints;\n    var spacingStyles = []; // in case of grid item\n\n    if (container) {\n      spacingStyles = resolveSpacingStyles(spacing, breakpoints, styles);\n    }\n\n    var breakpointsStyles = [];\n    breakpoints.forEach(function (breakpoint) {\n      var value = ownerState[breakpoint];\n\n      if (value) {\n        breakpointsStyles.push(styles[\"grid-\".concat(breakpoint, \"-\").concat(String(value))]);\n      }\n    });\n    return [styles.root, container && styles.container, item && styles.item, zeroMinWidth && styles.zeroMinWidth].concat(_toConsumableArray(spacingStyles), [direction !== 'row' && styles[\"direction-xs-\".concat(String(direction))], wrap !== 'wrap' && styles[\"wrap-xs-\".concat(String(wrap))]], breakpointsStyles);\n  }\n})(function (_ref10) {\n  var ownerState = _ref10.ownerState;\n  return _extends({\n    boxSizing: 'border-box'\n  }, ownerState.container && {\n    display: 'flex',\n    flexWrap: 'wrap',\n    width: '100%'\n  }, ownerState.item && {\n    margin: 0 // For instance, it's useful when used with a `figure` element.\n\n  }, ownerState.zeroMinWidth && {\n    minWidth: 0\n  }, ownerState.wrap !== 'wrap' && {\n    flexWrap: ownerState.wrap\n  });\n}, generateDirection, generateRowGap, generateColumnGap, generateGrid);\nexport function resolveSpacingClasses(spacing, breakpoints) {\n  // undefined/null or `spacing` <= 0\n  if (!spacing || spacing <= 0) {\n    return [];\n  } // in case of string/number `spacing`\n\n\n  if (typeof spacing === 'string' && !Number.isNaN(Number(spacing)) || typeof spacing === 'number') {\n    return [\"spacing-xs-\".concat(String(spacing))];\n  } // in case of object `spacing`\n\n\n  var classes = [];\n  breakpoints.forEach(function (breakpoint) {\n    var value = spacing[breakpoint];\n\n    if (Number(value) > 0) {\n      var className = \"spacing-\".concat(breakpoint, \"-\").concat(String(value));\n      classes.push(className);\n    }\n  });\n  return classes;\n}\n\nvar useUtilityClasses = function useUtilityClasses(ownerState) {\n  var classes = ownerState.classes,\n      container = ownerState.container,\n      direction = ownerState.direction,\n      item = ownerState.item,\n      spacing = ownerState.spacing,\n      wrap = ownerState.wrap,\n      zeroMinWidth = ownerState.zeroMinWidth,\n      breakpoints = ownerState.breakpoints;\n  var spacingClasses = []; // in case of grid item\n\n  if (container) {\n    spacingClasses = resolveSpacingClasses(spacing, breakpoints);\n  }\n\n  var breakpointsClasses = [];\n  breakpoints.forEach(function (breakpoint) {\n    var value = ownerState[breakpoint];\n\n    if (value) {\n      breakpointsClasses.push(\"grid-\".concat(breakpoint, \"-\").concat(String(value)));\n    }\n  });\n  var slots = {\n    root: ['root', container && 'container', item && 'item', zeroMinWidth && 'zeroMinWidth'].concat(_toConsumableArray(spacingClasses), [direction !== 'row' && \"direction-xs-\".concat(String(direction)), wrap !== 'wrap' && \"wrap-xs-\".concat(String(wrap))], breakpointsClasses)\n  };\n  return composeClasses(slots, getGridUtilityClass, classes);\n};\n\nvar Grid = /*#__PURE__*/React.forwardRef(function Grid(inProps, ref) {\n  var themeProps = useThemeProps({\n    props: inProps,\n    name: 'MuiGrid'\n  });\n\n  var _useTheme = useTheme(),\n      breakpoints = _useTheme.breakpoints;\n\n  var props = extendSxProp(themeProps);\n\n  var className = props.className,\n      columnsProp = props.columns,\n      columnSpacingProp = props.columnSpacing,\n      _props$component = props.component,\n      component = _props$component === void 0 ? 'div' : _props$component,\n      _props$container = props.container,\n      container = _props$container === void 0 ? false : _props$container,\n      _props$direction = props.direction,\n      direction = _props$direction === void 0 ? 'row' : _props$direction,\n      _props$item = props.item,\n      item = _props$item === void 0 ? false : _props$item,\n      rowSpacingProp = props.rowSpacing,\n      _props$spacing = props.spacing,\n      spacing = _props$spacing === void 0 ? 0 : _props$spacing,\n      _props$wrap = props.wrap,\n      wrap = _props$wrap === void 0 ? 'wrap' : _props$wrap,\n      _props$zeroMinWidth = props.zeroMinWidth,\n      zeroMinWidth = _props$zeroMinWidth === void 0 ? false : _props$zeroMinWidth,\n      other = _objectWithoutPropertiesLoose(props, _excluded);\n\n  var rowSpacing = rowSpacingProp || spacing;\n  var columnSpacing = columnSpacingProp || spacing;\n  var columnsContext = React.useContext(GridContext); // columns set with default breakpoint unit of 12\n\n  var columns = container ? columnsProp || 12 : columnsContext;\n  var breakpointsValues = {};\n\n  var otherFiltered = _extends({}, other);\n\n  breakpoints.keys.forEach(function (breakpoint) {\n    if (other[breakpoint] != null) {\n      breakpointsValues[breakpoint] = other[breakpoint];\n      delete otherFiltered[breakpoint];\n    }\n  });\n\n  var ownerState = _extends({}, props, {\n    columns: columns,\n    container: container,\n    direction: direction,\n    item: item,\n    rowSpacing: rowSpacing,\n    columnSpacing: columnSpacing,\n    wrap: wrap,\n    zeroMinWidth: zeroMinWidth,\n    spacing: spacing\n  }, breakpointsValues, {\n    breakpoints: breakpoints.keys\n  });\n\n  var classes = useUtilityClasses(ownerState);\n  return /*#__PURE__*/_jsx(GridContext.Provider, {\n    value: columns,\n    children: /*#__PURE__*/_jsx(GridRoot, _extends({\n      ownerState: ownerState,\n      className: clsx(classes.root, className),\n      as: component,\n      ref: ref\n    }, otherFiltered))\n  });\n});\nprocess.env.NODE_ENV !== \"production\" ? Grid.propTypes\n/* remove-proptypes */\n= {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * The content of the component.\n   */\n  children: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * The number of columns.\n   * @default 12\n   */\n  columns: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.number), PropTypes.number, PropTypes.object]),\n\n  /**\n   * Defines the horizontal space between the type `item` components.\n   * It overrides the value of the `spacing` prop.\n   */\n  columnSpacing: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.number, PropTypes.string])), PropTypes.number, PropTypes.object, PropTypes.string]),\n\n  /**\n   * The component used for the root node.\n   * Either a string to use a HTML element or a component.\n   */\n  component: PropTypes.elementType,\n\n  /**\n   * If `true`, the component will have the flex *container* behavior.\n   * You should be wrapping *items* with a *container*.\n   * @default false\n   */\n  container: PropTypes.bool,\n\n  /**\n   * Defines the `flex-direction` style property.\n   * It is applied for all screen sizes.\n   * @default 'row'\n   */\n  direction: PropTypes.oneOfType([PropTypes.oneOf(['column-reverse', 'column', 'row-reverse', 'row']), PropTypes.arrayOf(PropTypes.oneOf(['column-reverse', 'column', 'row-reverse', 'row'])), PropTypes.object]),\n\n  /**\n   * If `true`, the component will have the flex *item* behavior.\n   * You should be wrapping *items* with a *container*.\n   * @default false\n   */\n  item: PropTypes.bool,\n\n  /**\n   * If a number, it sets the number of columns the grid item uses.\n   * It can't be greater than the total number of columns of the container (12 by default).\n   * If 'auto', the grid item's width matches its content.\n   * If false, the prop is ignored.\n   * If true, the grid item's width grows to use the space available in the grid container.\n   * The value is applied for the `lg` breakpoint and wider screens if not overridden.\n   * @default false\n   */\n  lg: PropTypes.oneOfType([PropTypes.oneOf(['auto']), PropTypes.number, PropTypes.bool]),\n\n  /**\n   * If a number, it sets the number of columns the grid item uses.\n   * It can't be greater than the total number of columns of the container (12 by default).\n   * If 'auto', the grid item's width matches its content.\n   * If false, the prop is ignored.\n   * If true, the grid item's width grows to use the space available in the grid container.\n   * The value is applied for the `md` breakpoint and wider screens if not overridden.\n   * @default false\n   */\n  md: PropTypes.oneOfType([PropTypes.oneOf(['auto']), PropTypes.number, PropTypes.bool]),\n\n  /**\n   * Defines the vertical space between the type `item` components.\n   * It overrides the value of the `spacing` prop.\n   */\n  rowSpacing: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.number, PropTypes.string])), PropTypes.number, PropTypes.object, PropTypes.string]),\n\n  /**\n   * If a number, it sets the number of columns the grid item uses.\n   * It can't be greater than the total number of columns of the container (12 by default).\n   * If 'auto', the grid item's width matches its content.\n   * If false, the prop is ignored.\n   * If true, the grid item's width grows to use the space available in the grid container.\n   * The value is applied for the `sm` breakpoint and wider screens if not overridden.\n   * @default false\n   */\n  sm: PropTypes.oneOfType([PropTypes.oneOf(['auto']), PropTypes.number, PropTypes.bool]),\n\n  /**\n   * Defines the space between the type `item` components.\n   * It can only be used on a type `container` component.\n   * @default 0\n   */\n  spacing: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.number, PropTypes.string])), PropTypes.number, PropTypes.object, PropTypes.string]),\n\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object]),\n\n  /**\n   * Defines the `flex-wrap` style property.\n   * It's applied for all screen sizes.\n   * @default 'wrap'\n   */\n  wrap: PropTypes.oneOf(['nowrap', 'wrap-reverse', 'wrap']),\n\n  /**\n   * If a number, it sets the number of columns the grid item uses.\n   * It can't be greater than the total number of columns of the container (12 by default).\n   * If 'auto', the grid item's width matches its content.\n   * If false, the prop is ignored.\n   * If true, the grid item's width grows to use the space available in the grid container.\n   * The value is applied for the `xl` breakpoint and wider screens if not overridden.\n   * @default false\n   */\n  xl: PropTypes.oneOfType([PropTypes.oneOf(['auto']), PropTypes.number, PropTypes.bool]),\n\n  /**\n   * If a number, it sets the number of columns the grid item uses.\n   * It can't be greater than the total number of columns of the container (12 by default).\n   * If 'auto', the grid item's width matches its content.\n   * If false, the prop is ignored.\n   * If true, the grid item's width grows to use the space available in the grid container.\n   * The value is applied for all the screen sizes with the lowest priority.\n   * @default false\n   */\n  xs: PropTypes.oneOfType([PropTypes.oneOf(['auto']), PropTypes.number, PropTypes.bool]),\n\n  /**\n   * If `true`, it sets `min-width: 0` on the item.\n   * Refer to the limitations section of the documentation to better understand the use case.\n   * @default false\n   */\n  zeroMinWidth: PropTypes.bool\n} : void 0;\n\nif (process.env.NODE_ENV !== 'production') {\n  var requireProp = requirePropFactory('Grid', Grid); // eslint-disable-next-line no-useless-concat\n\n  Grid['propTypes' + ''] = _extends({}, Grid.propTypes, {\n    direction: requireProp('container'),\n    lg: requireProp('item'),\n    md: requireProp('item'),\n    sm: requireProp('item'),\n    spacing: requireProp('container'),\n    wrap: requireProp('container'),\n    xs: requireProp('item'),\n    zeroMinWidth: requireProp('item')\n  });\n}\n\nexport default Grid;","map":{"version":3,"names":["_objectWithoutPropertiesLoose","_extends","_excluded","React","PropTypes","clsx","unstable_extendSxProp","extendSxProp","handleBreakpoints","unstable_resolveBreakpointValues","resolveBreakpointValues","unstable_composeClasses","composeClasses","requirePropFactory","styled","useThemeProps","useTheme","GridContext","gridClasses","getGridUtilityClass","jsx","_jsx","getOffset","val","parse","parseFloat","String","replace","generateGrid","theme","ownerState","size","breakpoints","keys","reduce","globalStyles","breakpoint","styles","flexBasis","flexGrow","maxWidth","flexShrink","width","columnsBreakpointValues","values","columns","columnValue","undefined","Math","round","more","container","item","columnSpacing","themeSpacing","spacing","fullWidth","Object","assign","up","generateDirection","directionValues","direction","propValue","output","flexDirection","indexOf","extractZeroValueBreakpointKeys","nonZeroKey","forEach","key","sortedBreakpointKeysByValue","sort","a","b","slice","generateRowGap","rowSpacing","rowSpacingValues","zeroValueBreakpointKeys","marginTop","paddingTop","includes","generateColumnGap","columnSpacingValues","marginLeft","paddingLeft","resolveSpacingStyles","Number","isNaN","spacingStyles","value","push","GridRoot","name","slot","overridesResolver","props","wrap","zeroMinWidth","breakpointsStyles","root","boxSizing","display","flexWrap","margin","minWidth","resolveSpacingClasses","classes","className","useUtilityClasses","spacingClasses","breakpointsClasses","slots","Grid","forwardRef","inProps","ref","themeProps","columnsProp","columnSpacingProp","component","rowSpacingProp","other","columnsContext","useContext","breakpointsValues","otherFiltered","Provider","children","as","process","env","NODE_ENV","propTypes","node","object","string","oneOfType","arrayOf","number","elementType","bool","oneOf","lg","md","sm","sx","func","xl","xs","requireProp"],"sources":["E:/Web_development/Projects/youtube_clone/node_modules/@mui/material/Grid/Grid.js"],"sourcesContent":["import _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nconst _excluded = [\"className\", \"columns\", \"columnSpacing\", \"component\", \"container\", \"direction\", \"item\", \"rowSpacing\", \"spacing\", \"wrap\", \"zeroMinWidth\"];\n// A grid component using the following libs as inspiration.\n//\n// For the implementation:\n// - https://getbootstrap.com/docs/4.3/layout/grid/\n// - https://github.com/kristoferjoseph/flexboxgrid/blob/master/src/css/flexboxgrid.css\n// - https://github.com/roylee0704/react-flexbox-grid\n// - https://material.angularjs.org/latest/layout/introduction\n//\n// Follow this flexbox Guide to better understand the underlying model:\n// - https://css-tricks.com/snippets/css/a-guide-to-flexbox/\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { unstable_extendSxProp as extendSxProp, handleBreakpoints, unstable_resolveBreakpointValues as resolveBreakpointValues } from '@mui/system';\nimport { unstable_composeClasses as composeClasses } from '@mui/base';\nimport requirePropFactory from '../utils/requirePropFactory';\nimport styled from '../styles/styled';\nimport useThemeProps from '../styles/useThemeProps';\nimport useTheme from '../styles/useTheme';\nimport GridContext from './GridContext';\nimport gridClasses, { getGridUtilityClass } from './gridClasses';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\n\nfunction getOffset(val) {\n  const parse = parseFloat(val);\n  return `${parse}${String(val).replace(String(parse), '') || 'px'}`;\n}\n\nexport function generateGrid({\n  theme,\n  ownerState\n}) {\n  let size;\n  return theme.breakpoints.keys.reduce((globalStyles, breakpoint) => {\n    // Use side effect over immutability for better performance.\n    let styles = {};\n\n    if (ownerState[breakpoint]) {\n      size = ownerState[breakpoint];\n    }\n\n    if (!size) {\n      return globalStyles;\n    }\n\n    if (size === true) {\n      // For the auto layouting\n      styles = {\n        flexBasis: 0,\n        flexGrow: 1,\n        maxWidth: '100%'\n      };\n    } else if (size === 'auto') {\n      styles = {\n        flexBasis: 'auto',\n        flexGrow: 0,\n        flexShrink: 0,\n        maxWidth: 'none',\n        width: 'auto'\n      };\n    } else {\n      const columnsBreakpointValues = resolveBreakpointValues({\n        values: ownerState.columns,\n        breakpoints: theme.breakpoints.values\n      });\n      const columnValue = typeof columnsBreakpointValues === 'object' ? columnsBreakpointValues[breakpoint] : columnsBreakpointValues;\n\n      if (columnValue === undefined || columnValue === null) {\n        return globalStyles;\n      } // Keep 7 significant numbers.\n\n\n      const width = `${Math.round(size / columnValue * 10e7) / 10e5}%`;\n      let more = {};\n\n      if (ownerState.container && ownerState.item && ownerState.columnSpacing !== 0) {\n        const themeSpacing = theme.spacing(ownerState.columnSpacing);\n\n        if (themeSpacing !== '0px') {\n          const fullWidth = `calc(${width} + ${getOffset(themeSpacing)})`;\n          more = {\n            flexBasis: fullWidth,\n            maxWidth: fullWidth\n          };\n        }\n      } // Close to the bootstrap implementation:\n      // https://github.com/twbs/bootstrap/blob/8fccaa2439e97ec72a4b7dc42ccc1f649790adb0/scss/mixins/_grid.scss#L41\n\n\n      styles = _extends({\n        flexBasis: width,\n        flexGrow: 0,\n        maxWidth: width\n      }, more);\n    } // No need for a media query for the first size.\n\n\n    if (theme.breakpoints.values[breakpoint] === 0) {\n      Object.assign(globalStyles, styles);\n    } else {\n      globalStyles[theme.breakpoints.up(breakpoint)] = styles;\n    }\n\n    return globalStyles;\n  }, {});\n}\nexport function generateDirection({\n  theme,\n  ownerState\n}) {\n  const directionValues = resolveBreakpointValues({\n    values: ownerState.direction,\n    breakpoints: theme.breakpoints.values\n  });\n  return handleBreakpoints({\n    theme\n  }, directionValues, propValue => {\n    const output = {\n      flexDirection: propValue\n    };\n\n    if (propValue.indexOf('column') === 0) {\n      output[`& > .${gridClasses.item}`] = {\n        maxWidth: 'none'\n      };\n    }\n\n    return output;\n  });\n}\n/**\n * Extracts zero value breakpoint keys before a non-zero value breakpoint key.\n * @example { xs: 0, sm: 0, md: 2, lg: 0, xl: 0 } or [0, 0, 2, 0, 0]\n * @returns [xs, sm]\n */\n\nfunction extractZeroValueBreakpointKeys({\n  breakpoints,\n  values\n}) {\n  let nonZeroKey = '';\n  Object.keys(values).forEach(key => {\n    if (nonZeroKey !== '') {\n      return;\n    }\n\n    if (values[key] !== 0) {\n      nonZeroKey = key;\n    }\n  });\n  const sortedBreakpointKeysByValue = Object.keys(breakpoints).sort((a, b) => {\n    return breakpoints[a] - breakpoints[b];\n  });\n  return sortedBreakpointKeysByValue.slice(0, sortedBreakpointKeysByValue.indexOf(nonZeroKey));\n}\n\nexport function generateRowGap({\n  theme,\n  ownerState\n}) {\n  const {\n    container,\n    rowSpacing\n  } = ownerState;\n  let styles = {};\n\n  if (container && rowSpacing !== 0) {\n    const rowSpacingValues = resolveBreakpointValues({\n      values: rowSpacing,\n      breakpoints: theme.breakpoints.values\n    });\n    let zeroValueBreakpointKeys;\n\n    if (typeof rowSpacingValues === 'object') {\n      zeroValueBreakpointKeys = extractZeroValueBreakpointKeys({\n        breakpoints: theme.breakpoints.values,\n        values: rowSpacingValues\n      });\n    }\n\n    styles = handleBreakpoints({\n      theme\n    }, rowSpacingValues, (propValue, breakpoint) => {\n      const themeSpacing = theme.spacing(propValue);\n\n      if (themeSpacing !== '0px') {\n        return {\n          marginTop: `-${getOffset(themeSpacing)}`,\n          [`& > .${gridClasses.item}`]: {\n            paddingTop: getOffset(themeSpacing)\n          }\n        };\n      }\n\n      if (zeroValueBreakpointKeys.includes(breakpoint)) {\n        return {};\n      }\n\n      return {\n        marginTop: 0,\n        [`& > .${gridClasses.item}`]: {\n          paddingTop: 0\n        }\n      };\n    });\n  }\n\n  return styles;\n}\nexport function generateColumnGap({\n  theme,\n  ownerState\n}) {\n  const {\n    container,\n    columnSpacing\n  } = ownerState;\n  let styles = {};\n\n  if (container && columnSpacing !== 0) {\n    const columnSpacingValues = resolveBreakpointValues({\n      values: columnSpacing,\n      breakpoints: theme.breakpoints.values\n    });\n    let zeroValueBreakpointKeys;\n\n    if (typeof columnSpacingValues === 'object') {\n      zeroValueBreakpointKeys = extractZeroValueBreakpointKeys({\n        breakpoints: theme.breakpoints.values,\n        values: columnSpacingValues\n      });\n    }\n\n    styles = handleBreakpoints({\n      theme\n    }, columnSpacingValues, (propValue, breakpoint) => {\n      const themeSpacing = theme.spacing(propValue);\n\n      if (themeSpacing !== '0px') {\n        return {\n          width: `calc(100% + ${getOffset(themeSpacing)})`,\n          marginLeft: `-${getOffset(themeSpacing)}`,\n          [`& > .${gridClasses.item}`]: {\n            paddingLeft: getOffset(themeSpacing)\n          }\n        };\n      }\n\n      if (zeroValueBreakpointKeys.includes(breakpoint)) {\n        return {};\n      }\n\n      return {\n        width: '100%',\n        marginLeft: 0,\n        [`& > .${gridClasses.item}`]: {\n          paddingLeft: 0\n        }\n      };\n    });\n  }\n\n  return styles;\n}\nexport function resolveSpacingStyles(spacing, breakpoints, styles = {}) {\n  // undefined/null or `spacing` <= 0\n  if (!spacing || spacing <= 0) {\n    return [];\n  } // in case of string/number `spacing`\n\n\n  if (typeof spacing === 'string' && !Number.isNaN(Number(spacing)) || typeof spacing === 'number') {\n    return [styles[`spacing-xs-${String(spacing)}`]];\n  } // in case of object `spacing`\n\n\n  const spacingStyles = [];\n  breakpoints.forEach(breakpoint => {\n    const value = spacing[breakpoint];\n\n    if (Number(value) > 0) {\n      spacingStyles.push(styles[`spacing-${breakpoint}-${String(value)}`]);\n    }\n  });\n  return spacingStyles;\n} // Default CSS values\n// flex: '0 1 auto',\n// flexDirection: 'row',\n// alignItems: 'flex-start',\n// flexWrap: 'nowrap',\n// justifyContent: 'flex-start',\n\nconst GridRoot = styled('div', {\n  name: 'MuiGrid',\n  slot: 'Root',\n  overridesResolver: (props, styles) => {\n    const {\n      ownerState\n    } = props;\n    const {\n      container,\n      direction,\n      item,\n      spacing,\n      wrap,\n      zeroMinWidth,\n      breakpoints\n    } = ownerState;\n    let spacingStyles = []; // in case of grid item\n\n    if (container) {\n      spacingStyles = resolveSpacingStyles(spacing, breakpoints, styles);\n    }\n\n    const breakpointsStyles = [];\n    breakpoints.forEach(breakpoint => {\n      const value = ownerState[breakpoint];\n\n      if (value) {\n        breakpointsStyles.push(styles[`grid-${breakpoint}-${String(value)}`]);\n      }\n    });\n    return [styles.root, container && styles.container, item && styles.item, zeroMinWidth && styles.zeroMinWidth, ...spacingStyles, direction !== 'row' && styles[`direction-xs-${String(direction)}`], wrap !== 'wrap' && styles[`wrap-xs-${String(wrap)}`], ...breakpointsStyles];\n  }\n})(({\n  ownerState\n}) => _extends({\n  boxSizing: 'border-box'\n}, ownerState.container && {\n  display: 'flex',\n  flexWrap: 'wrap',\n  width: '100%'\n}, ownerState.item && {\n  margin: 0 // For instance, it's useful when used with a `figure` element.\n\n}, ownerState.zeroMinWidth && {\n  minWidth: 0\n}, ownerState.wrap !== 'wrap' && {\n  flexWrap: ownerState.wrap\n}), generateDirection, generateRowGap, generateColumnGap, generateGrid);\nexport function resolveSpacingClasses(spacing, breakpoints) {\n  // undefined/null or `spacing` <= 0\n  if (!spacing || spacing <= 0) {\n    return [];\n  } // in case of string/number `spacing`\n\n\n  if (typeof spacing === 'string' && !Number.isNaN(Number(spacing)) || typeof spacing === 'number') {\n    return [`spacing-xs-${String(spacing)}`];\n  } // in case of object `spacing`\n\n\n  const classes = [];\n  breakpoints.forEach(breakpoint => {\n    const value = spacing[breakpoint];\n\n    if (Number(value) > 0) {\n      const className = `spacing-${breakpoint}-${String(value)}`;\n      classes.push(className);\n    }\n  });\n  return classes;\n}\n\nconst useUtilityClasses = ownerState => {\n  const {\n    classes,\n    container,\n    direction,\n    item,\n    spacing,\n    wrap,\n    zeroMinWidth,\n    breakpoints\n  } = ownerState;\n  let spacingClasses = []; // in case of grid item\n\n  if (container) {\n    spacingClasses = resolveSpacingClasses(spacing, breakpoints);\n  }\n\n  const breakpointsClasses = [];\n  breakpoints.forEach(breakpoint => {\n    const value = ownerState[breakpoint];\n\n    if (value) {\n      breakpointsClasses.push(`grid-${breakpoint}-${String(value)}`);\n    }\n  });\n  const slots = {\n    root: ['root', container && 'container', item && 'item', zeroMinWidth && 'zeroMinWidth', ...spacingClasses, direction !== 'row' && `direction-xs-${String(direction)}`, wrap !== 'wrap' && `wrap-xs-${String(wrap)}`, ...breakpointsClasses]\n  };\n  return composeClasses(slots, getGridUtilityClass, classes);\n};\n\nconst Grid = /*#__PURE__*/React.forwardRef(function Grid(inProps, ref) {\n  const themeProps = useThemeProps({\n    props: inProps,\n    name: 'MuiGrid'\n  });\n  const {\n    breakpoints\n  } = useTheme();\n  const props = extendSxProp(themeProps);\n\n  const {\n    className,\n    columns: columnsProp,\n    columnSpacing: columnSpacingProp,\n    component = 'div',\n    container = false,\n    direction = 'row',\n    item = false,\n    rowSpacing: rowSpacingProp,\n    spacing = 0,\n    wrap = 'wrap',\n    zeroMinWidth = false\n  } = props,\n        other = _objectWithoutPropertiesLoose(props, _excluded);\n\n  const rowSpacing = rowSpacingProp || spacing;\n  const columnSpacing = columnSpacingProp || spacing;\n  const columnsContext = React.useContext(GridContext); // columns set with default breakpoint unit of 12\n\n  const columns = container ? columnsProp || 12 : columnsContext;\n  const breakpointsValues = {};\n\n  const otherFiltered = _extends({}, other);\n\n  breakpoints.keys.forEach(breakpoint => {\n    if (other[breakpoint] != null) {\n      breakpointsValues[breakpoint] = other[breakpoint];\n      delete otherFiltered[breakpoint];\n    }\n  });\n\n  const ownerState = _extends({}, props, {\n    columns,\n    container,\n    direction,\n    item,\n    rowSpacing,\n    columnSpacing,\n    wrap,\n    zeroMinWidth,\n    spacing\n  }, breakpointsValues, {\n    breakpoints: breakpoints.keys\n  });\n\n  const classes = useUtilityClasses(ownerState);\n  return /*#__PURE__*/_jsx(GridContext.Provider, {\n    value: columns,\n    children: /*#__PURE__*/_jsx(GridRoot, _extends({\n      ownerState: ownerState,\n      className: clsx(classes.root, className),\n      as: component,\n      ref: ref\n    }, otherFiltered))\n  });\n});\nprocess.env.NODE_ENV !== \"production\" ? Grid.propTypes\n/* remove-proptypes */\n= {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * The content of the component.\n   */\n  children: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * The number of columns.\n   * @default 12\n   */\n  columns: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.number), PropTypes.number, PropTypes.object]),\n\n  /**\n   * Defines the horizontal space between the type `item` components.\n   * It overrides the value of the `spacing` prop.\n   */\n  columnSpacing: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.number, PropTypes.string])), PropTypes.number, PropTypes.object, PropTypes.string]),\n\n  /**\n   * The component used for the root node.\n   * Either a string to use a HTML element or a component.\n   */\n  component: PropTypes.elementType,\n\n  /**\n   * If `true`, the component will have the flex *container* behavior.\n   * You should be wrapping *items* with a *container*.\n   * @default false\n   */\n  container: PropTypes.bool,\n\n  /**\n   * Defines the `flex-direction` style property.\n   * It is applied for all screen sizes.\n   * @default 'row'\n   */\n  direction: PropTypes.oneOfType([PropTypes.oneOf(['column-reverse', 'column', 'row-reverse', 'row']), PropTypes.arrayOf(PropTypes.oneOf(['column-reverse', 'column', 'row-reverse', 'row'])), PropTypes.object]),\n\n  /**\n   * If `true`, the component will have the flex *item* behavior.\n   * You should be wrapping *items* with a *container*.\n   * @default false\n   */\n  item: PropTypes.bool,\n\n  /**\n   * If a number, it sets the number of columns the grid item uses.\n   * It can't be greater than the total number of columns of the container (12 by default).\n   * If 'auto', the grid item's width matches its content.\n   * If false, the prop is ignored.\n   * If true, the grid item's width grows to use the space available in the grid container.\n   * The value is applied for the `lg` breakpoint and wider screens if not overridden.\n   * @default false\n   */\n  lg: PropTypes.oneOfType([PropTypes.oneOf(['auto']), PropTypes.number, PropTypes.bool]),\n\n  /**\n   * If a number, it sets the number of columns the grid item uses.\n   * It can't be greater than the total number of columns of the container (12 by default).\n   * If 'auto', the grid item's width matches its content.\n   * If false, the prop is ignored.\n   * If true, the grid item's width grows to use the space available in the grid container.\n   * The value is applied for the `md` breakpoint and wider screens if not overridden.\n   * @default false\n   */\n  md: PropTypes.oneOfType([PropTypes.oneOf(['auto']), PropTypes.number, PropTypes.bool]),\n\n  /**\n   * Defines the vertical space between the type `item` components.\n   * It overrides the value of the `spacing` prop.\n   */\n  rowSpacing: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.number, PropTypes.string])), PropTypes.number, PropTypes.object, PropTypes.string]),\n\n  /**\n   * If a number, it sets the number of columns the grid item uses.\n   * It can't be greater than the total number of columns of the container (12 by default).\n   * If 'auto', the grid item's width matches its content.\n   * If false, the prop is ignored.\n   * If true, the grid item's width grows to use the space available in the grid container.\n   * The value is applied for the `sm` breakpoint and wider screens if not overridden.\n   * @default false\n   */\n  sm: PropTypes.oneOfType([PropTypes.oneOf(['auto']), PropTypes.number, PropTypes.bool]),\n\n  /**\n   * Defines the space between the type `item` components.\n   * It can only be used on a type `container` component.\n   * @default 0\n   */\n  spacing: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.number, PropTypes.string])), PropTypes.number, PropTypes.object, PropTypes.string]),\n\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object]),\n\n  /**\n   * Defines the `flex-wrap` style property.\n   * It's applied for all screen sizes.\n   * @default 'wrap'\n   */\n  wrap: PropTypes.oneOf(['nowrap', 'wrap-reverse', 'wrap']),\n\n  /**\n   * If a number, it sets the number of columns the grid item uses.\n   * It can't be greater than the total number of columns of the container (12 by default).\n   * If 'auto', the grid item's width matches its content.\n   * If false, the prop is ignored.\n   * If true, the grid item's width grows to use the space available in the grid container.\n   * The value is applied for the `xl` breakpoint and wider screens if not overridden.\n   * @default false\n   */\n  xl: PropTypes.oneOfType([PropTypes.oneOf(['auto']), PropTypes.number, PropTypes.bool]),\n\n  /**\n   * If a number, it sets the number of columns the grid item uses.\n   * It can't be greater than the total number of columns of the container (12 by default).\n   * If 'auto', the grid item's width matches its content.\n   * If false, the prop is ignored.\n   * If true, the grid item's width grows to use the space available in the grid container.\n   * The value is applied for all the screen sizes with the lowest priority.\n   * @default false\n   */\n  xs: PropTypes.oneOfType([PropTypes.oneOf(['auto']), PropTypes.number, PropTypes.bool]),\n\n  /**\n   * If `true`, it sets `min-width: 0` on the item.\n   * Refer to the limitations section of the documentation to better understand the use case.\n   * @default false\n   */\n  zeroMinWidth: PropTypes.bool\n} : void 0;\n\nif (process.env.NODE_ENV !== 'production') {\n  const requireProp = requirePropFactory('Grid', Grid); // eslint-disable-next-line no-useless-concat\n\n  Grid['propTypes' + ''] = _extends({}, Grid.propTypes, {\n    direction: requireProp('container'),\n    lg: requireProp('item'),\n    md: requireProp('item'),\n    sm: requireProp('item'),\n    spacing: requireProp('container'),\n    wrap: requireProp('container'),\n    xs: requireProp('item'),\n    zeroMinWidth: requireProp('item')\n  });\n}\n\nexport default Grid;"],"mappings":"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"},"metadata":{},"sourceType":"module"}